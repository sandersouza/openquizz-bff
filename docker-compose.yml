services:
  traefik:
    image: traefik:v3.1
    command:
      - --api.dashboard=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.h3.address=:443/udp
    ports:
      - "80:80"
      - "443:443"
      - "8082:8082"

    volumes:
      - ./infra/traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./infra/traefik/dynamic:/etc/traefik/dynamic:ro
      - /var/run/podman/podman.sock:/var/run/podman/podman.sock:ro
    depends_on:
      - bff-admin
      - bff-player
      - ws-gateway

  mongo:
    image: mongo:7
    restart: unless-stopped
    ports: ["27017:27017"]
    volumes:
      - mongo_data:/data/db

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "no"]
    ports: ["6379:6379"]

  quiz-service:
    build:
      context: .
      dockerfile: services/quiz-service/Dockerfile
    environment:
      - MONGO_URI=${MONGO_URI:-mongodb://mongo:27017/openquiz}
    depends_on: [mongo]

  game-service:
    build:
      context: .
      dockerfile: services/game-service/Dockerfile
    environment:
      - MONGO_URI=${MONGO_URI:-mongodb://mongo:27017/openquiz}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
    depends_on: [mongo, redis]

  bff-admin:
    build:
      context: .
      dockerfile: apps/bff-admin/Dockerfile
    environment:
      - UPSTREAM_QUIZ=http://quiz-service:8000
      - UPSTREAM_GAME=http://game-service:8000
    depends_on: [quiz-service, game-service]

  bff-player:
    build:
      context: .
      dockerfile: apps/bff-player/Dockerfile
    environment:
      - UPSTREAM_GAME=http://game-service:8000
    depends_on: [game-service]

  ws-gateway:
    build:
      context: .
      dockerfile: gateway/realtime/Dockerfile
    environment:
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
    depends_on: [redis]

  admin-frontend:
    profiles: ["frontends"]
    build: ./frontends/admin
    container_name: openquiz-admin
    depends_on: [bff-admin]
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_BASE=/admin
      - NEXT_PUBLIC_WS_BASE=ws://localhost

  player-frontend:
    profiles: ["frontends"]
    build: ./frontends/player
    container_name: openquiz-player
    depends_on: [bff-player]
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_BASE=/player
      - NEXT_PUBLIC_WS_BASE=ws://localhost

volumes:
  mongo_data: {}
